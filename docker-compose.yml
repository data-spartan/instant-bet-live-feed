version: '3.8'
networks:
  live-feed-network:
    driver: bridge

  #join pre-existing network
  instantbet-scraper_redis-scraper-network:
    external: true

services:
  zookeeper-0:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper-0
    container_name: zookeeper-0
    environment:
      ZOOKEEPER_SERVER_ID: 0
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zk-0:/var/lib/zookeeper
        # - zoo_1_data:/var/lib/zookeeper/
    ports:
      - ${ZOOKEEPER_0_PORT}:2181
    networks:
      - live-feed-network
    restart: unless-stopped

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper-1
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zk-1:/var/lib/zookeeper
    ports:
      - ${ZOOKEEPER_1_PORT}:2181
    networks:
      - live-feed-network
    restart: unless-stopped

  kafka-0:
    image: confluentinc/cp-kafka:latest
    hostname: broker-0
    container_name: broker-0
    depends_on:
      - zookeeper-0
      - zookeeper-1

    ports:
      - ${KAFKA_BROKER_0_PORT}:29092
    networks:
      - live-feed-network
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-0:2181,zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-0:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 48
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: 45

    volumes:
      - broker-0:/var/lib/kafka/data
        # - kafka-broker-1:/var/lib/kafka/data

  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - zookeeper-0
      - zookeeper-1
    ports:
      - ${KAFKA_BROKER_1_PORT}:39092
    networks:
      - live-feed-network
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-0:2181,zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9093,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 48
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: 45
    volumes:
      - broker-1:/var/lib/kafka/data

  kafdrop-live-feed:
    container_name: 'live-feed-kafdrop'
    image: obsidiandynamics/kafdrop:latest
    environment:
      - KAFKA_BROKERCONNECT=kafka-0:9092,kafka-1:9092
    ports:
      - ${KAFDROP_PORT}:9000
    networks:
      - live-feed-network
    #try n times before exiting
    restart: on-failure:10
    depends_on:
      - kafka-0
      - kafka-1

  mongodb-live-feed:
    image: mongo:latest
    container_name: mongodb-live-feed
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    networks:
      - live-feed-network
    restart: unless-stopped
    volumes:
      - mongodb:/data/db

  live-feed-app:
    container_name: live-feed
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    networks:
      - live-feed-network
      - instantbet-scraper_redis-scraper-network
    volumes:
      - live-feed-app:/usr/src/logs
    restart: unless-stopped
    depends_on:
      - kafka-0
      - kafka-1
      - mongodb-live-feed

volumes:
  zk-0:
    driver: local
  zk-1:
    driver: local
  broker-0:
    driver: local
  broker-1:
    driver: local
  mongodb:
    driver: local
  live-feed-app:
    driver: local
